# migrate app-connector-certs for cacert value
# problem
#  core/charts/gateway/templates
#
#  Compass Runtime Agent podczas polaczenia wypełnia certyfikat dla API gateway ustawiajac pole cacert w sekrecie
#
#  W 1.16 secret nazywal się kyma-gatewy-certs-cacert
#  W 1.17 ten secret nazywa się app-connector-certs
#
# Moment upgrade:
#  1. Tworzony jest nowy cert app-connector-certs stary kyma-gatewy-certs-cacert zaraz zniknie
#  2. Helm updateuje deployment CRA, wskazujemy na nowy cert jako APP_CA_CERTIFICATES_SECRET kyma-gatewy-certs-cacert -> app-connector-certs
#
#  W secrecie  app-connector-certs powinien sie znaleść wpis cacert który CRA ustawił wcześniej w secrecie kyma-gatewy-certs-cacert
#  Zatem w jobie powinniśmy przepisać cacert ze starego kyma-gatewy-certs-cacert do app-connector-certs
#
#  Teraz jest tak, że dopiero przy regenracji polaczenia Compass connection ta wartość jest wpisywana
#  Secret jest definicja secretu helmowego
#
# Pytania: namespace? / uruchomienie? / zależności do utworzenia secretu? / job goatów czy może dałoby sie wykorzystać
# 3 zmieznne / 3 klucze by przerzucic zawratosc calego secretu. Create secret from literal
#
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Chart.Name }}-cacert-migrate-job
  namespace: compass-system
  annotations:
    helm.sh/hook: pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
  labels:
    release: {{ .Release.Name }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    app.kubernetes.io/name: {{ template "name" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  template:
    metadata:
      name: {{ .Chart.Name }}-cacert-migrate-job
      namespace: {{ .Values.global.namespace }}
      annotations:
        sidecar.istio.io/inject: “false”
      labels:
        release: {{ .Release.Name }}
        helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
        app.kubernetes.io/name: {{ template "name" . }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ .Chart.Name }}-cacert-migrate-job
      restartPolicy: Never
      containers:
        - name: {{ .Chart.Name }}-cacert-migrate-job
          image: "{{ .Values.global.containerRegistry.path }}/compass-runtime-agent-cacert-migrate-job:{{ .Values.global.cacert_migrate_setup_job.version }}"
          args:
#            - "--oldConnectorGatewayCertificateSecret={{ .Values.cacert_migrate_setup_job.secrets.oldConnectorGatewaySecret.namespace }}/{{ .Values.cacert_migrate_setup_job.secrets.oldConnectorGatewaySecret.name }}"
#            - "--newConnectorGatewaySecret={{ .Values.cacert_migrate_setup_job.secrets.newConnectorGatewaySecret.namespace }}/{{ .Values.cacert_migrate_setup_job.secrets.newConnectorGatewaySecret.name }}"
          command:
            - bash
            - -c
            - |
            {{ tpl (.Files.Get "files/cacert-migrate.sh" | printf "%s" | indent 12) . }}

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Chart.Name }}-cacert-migrate
  namespace:  istio-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ .Chart.Name }}-cacert-migrate
  namespace: istio-system
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list", "patch"]
    resourceNames:
      - {{ .Values.application_connectivity_certs_sync.secrets.oldConnectorGatewaySecret.name }}
      - {{ .Values.application_connectivity_certs_sync.secrets.newConnectorGatewaySecret.name }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ .Chart.Name }}-cacert-migrate
  namespace: istio-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ .Chart.Name }}-cacert-migrate
subjects:
  - kind: ServiceAccount
    name: {{ .Chart.Name }}-cacert-migrate
    namespace: istio-system


